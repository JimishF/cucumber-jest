{"version":3,"sources":["../src/index.ts"],"names":["canInstrument","getCacheKey","fileData","filename","configString","instrument","crypto","createHash","update","digest","process","src","filePath","jestConfig","testFile","cwd","JSON","stringify","moduleFileExtensions","featureFile","presets","jestPreset","root","code"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;;;eAGe;AACXA,EAAAA,aAAa,EAAE,KADJ;AAEXC,EAAAA,WAAW,EAAE,CAACC,QAAD,EAAWC,QAAX,EAAqBC,YAArB,EAAmC;AAACC,IAAAA;AAAD,GAAnC,KACTC,gBACKC,UADL,CACgB,KADhB,EAEKC,MAFL,CAEY,IAFZ,EAEkB,MAFlB,EAGKA,MAHL,CAGYN,QAHZ,EAIKM,MAJL,CAIY,IAJZ,EAIkB,MAJlB,EAKKA,MALL,CAKYL,QALZ,EAMKK,MANL,CAMY,IANZ,EAMkB,MANlB,EAOKA,MAPL,CAOYJ,YAPZ,EAQKI,MARL,CAQY,IARZ,EAQkB,MARlB,EASKA,MATL,CASY,IATZ,EASkB,MATlB,EAUKA,MAVL,CAUYH,UAAU,GAAG,YAAH,GAAkB,EAVxC,EAWKI,MAXL,CAWY,KAXZ,CAHO;;AAgBXC,EAAAA,OAAO,CAACC,GAAD,EAAcC,QAAd,EAAqCC,UAArC,EAAuE;AAE1E,UAAMC,QAAQ,GAAI;;;wBAGFD,UAAU,CAACE,GAAI,OAAMH,QAAS,MAAKI,IAAI,CAACC,SAAL,CAAeJ,UAAU,CAACK,oBAA1B,CAAgD;SAHnG;AAMA,UAAMC,WAAW,GAAG,qBAAUL,QAAV,EAAoB;AACpCX,MAAAA,QAAQ,EAAES,QAD0B;AAEpCQ,MAAAA,OAAO,EAAE,CAACC,wBAAD,CAF2B;AAGpCC,MAAAA,IAAI,EAAET,UAAU,CAACE;AAHmB,KAApB,CAApB;AAMA,WAAOI,WAAW,GAAGA,WAAW,CAACI,IAAf,GAAsBZ,GAAxC;AACH;;AA/BU,C","sourcesContent":["import { transform } from '@babel/core';\nimport jestPreset from 'babel-preset-jest';\nimport crypto from 'crypto';\nimport type { Config } from '@jest/types';\n\nexport default {\n    canInstrument: false,\n    getCacheKey: (fileData, filename, configString, {instrument}) => (\n        crypto\n            .createHash('md5')\n            .update('\\0', 'utf8')\n            .update(fileData)\n            .update('\\0', 'utf8')\n            .update(filename)\n            .update('\\0', 'utf8')\n            .update(configString)\n            .update('\\0', 'utf8')\n            .update('\\0', 'utf8')\n            .update(instrument ? 'instrument' : '')\n            .digest('hex')\n    ),\n    process(src: string, filePath: Config.Path, jestConfig: Config.ProjectConfig) {\n\n        const testFile = `\n            import execTest from 'jest-cucumber/dist/utils/parseFeature.js';\n            \n            execTest('${jestConfig.cwd}', '${filePath}', ${JSON.stringify(jestConfig.moduleFileExtensions)})\n        `;\n\n        const featureFile = transform(testFile, {\n            filename: filePath,\n            presets: [jestPreset],\n            root: jestConfig.cwd\n        });\n\n        return featureFile ? featureFile.code : src;\n    }\n};\n"],"file":"index.js"}